version: '3.8'
services:
  mysql_main:
    container_name: mysql_main
    hostname: mysql_main
    platform: ${MYSQL_PLATFORM}
    image: mysql/mysql-server:${MYSQL_SERVER_TAG}
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ${MYSQL_MAIN_DIR}/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ${MYSQL_MAIN_DIR}/my.cnf:/etc/mysql/my.cnf
      - mysql-main-data-volume:/var/lib/mysql
    ports:
      - '${FORWARD_MAIN_MYSQL_PORT:-3306}:3306'
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      retries: 5
      timeout: 5s

  mysql_replica:
    container_name: mysql_replica
    hostname: mysql_replica
    platform: ${MYSQL_PLATFORM}
    image: mysql/mysql-server:${MYSQL_SERVER_TAG}
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    depends_on:
      - mysql_main
    volumes:
      - ${MYSQL_REPLICA_DIR}/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ${MYSQL_REPLICA_DIR}/my.cnf:/etc/mysql/my.cnf
      - mysql-replica-data-volume:/var/lib/mysql
    ports:
      - '${FORWARD_REPLICA_MYSQL_PORT:-3306}:3306'
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      retries: 5
      timeout: 5s

  postgres_main:
    container_name: postgres_main
    hostname: postgres_main
    image: bitnami/postgresql:${POSTGRES_TAG}
    environment:
      POSTGRES_PGAUDIT_LOG: READ, WRITE
      POSTGRES_LOG_HOSTNAME: true
      POSTGRES_REPLICATION_MODE: master
      POSTGRES_REPLICATION_USER: ${POSTGRES_REPLICATION_USER}
      POSTGRES_REPLICATION_PASSWORD: ${POSTGRES_REPLICATION_PASSWORD}
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DATABASE: ${POSTGRES_DB}
    volumes:
      - ${POSTGRES_MAIN_DIR}/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres-main-data-volume:/var/lib/postgresql/data
    ports:
      - '${FORWARD_MAIN_POSTGRES_PORT:-5432}:5432'
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USERNAME} -d ${POSTGRES_DB}'" ]
      interval: 10s
      timeout: 3s
      retries: 3

  postgres_replica:
    container_name: postgres_replica
    hostname: postgres_replica
    image: bitnami/postgresql:${POSTGRES_TAG}
    environment:
      POSTGRES_USERNAME: ${POSTGRES_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_PGAUDIT_LOG: READ
      POSTGRES_LOG_HOSTNAME: true
      POSTGRESQL_MASTER_HOST: postgres_main
      POSTGRES_REPLICATION_MODE: slave
      POSTGRES_REPLICATION_USER: ${POSTGRES_REPLICATION_USER}
      POSTGRES_REPLICATION_PASSWORD: ${POSTGRES_REPLICATION_PASSWORD}
      POSTGRES_MASTER_PORT_NUMBER: ${FORWARD_MAIN_POSTGRES_PORT}
      POSTGRES_DATABASE: ${POSTGRES_DB}
    depends_on:
      - postgres_main
    volumes:
      - ${POSTGRES_REPLICA_DIR}/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres-replica-data-volume:/var/lib/postgresql/data
    ports:
      - '${FORWARD_REPLICA_POSTGRES_PORT:-5432}:5432'
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USERNAME} -d ${POSTGRES_DB}'" ]
      interval: 10s
      timeout: 3s
      retries: 3

volumes:
  mysql-main-data-volume:
  mysql-replica-data-volume:
  postgres-main-data-volume:
  postgres-replica-data-volume: